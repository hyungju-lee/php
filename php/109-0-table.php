<?php
    /*
     * 테이블 생성하기
     * 학습 내용 : 테이블을 생성하는 방법에 대해 학습합니다.
     * 힌트 내용 : 테이블 생성 명령문은 CREATE TABLE 입니다.
     *
     * 테이블은 데이터베이스 내에서 정보를 담는 역할을 합니다.
     * 우리가 여러 웹페이지들을 이용하면서보는 정보들의 대부분은 이 테이블에 저장되어 있던 자료들이 웹페이지로 출력된 것입니다.
     *
     * 테이블은 크게 필드와 레코드로 구분됩니다.
     * 테이블에서 번호, 이름, 직업, 성별을 '필드'라고 합니다.
     * 그리고 [1, 김미우, 초등학생, 여]를 '레코드'라고 합니다.
     *
     * 데이터베이스에서는 최적화가 중요합니다.
     * 테이블에 들어갈 값을 넣을 필드를 만들 때는 해당 필드에 어느 정도 용량의 값까지 입력할 수 있는지,
     * 어떤값을 입력해야 하는지를 명시합니다.
     *
     * 그럼 데이터를 입력할 수 있는 크기는 어느 정도이고, 어떤 데이터형이 들어가는지 지정하는 방법에 대해 알아보겠습니다.
     * 테이블을 만들 때는 필드를 명시하고 명시한 필드에 어떠한 데이터가 들어가는지와
     * 해당 데이터의 크기가 어느 정도 될 것인지를 명시해야 합니다.
     * 여기서 데이터라는 것은 짧은 텍스트인지, 긴 텍스트인지, 숫자인지 등을 의미합니다.
     *
     * 텍스트를 입력할 때는 입력할 텍스트의 길이를 지정합니다.
     * 다섯 글자만 입력한다면 5를 지정하면 됩니다.(MySQL 4.0 이전 버전은 byte를 단위로 사용했지만 5부터 글자수로 입력)
     * 하지만 숫자는 간단하지 않습니다.
     *
     * 데이터의 길이를 지정할 때는 byte(바이트)라는 단위를 사용합니다.
     * 일상생활에서 USB 메모리가 몇기가인지,
     * SSD 또는 하드디스크 용량,
     * 아이폰의 용량이 얼마인지 물어볼 때 사용하는 단위가 byte입니다.
     *
     * 1byte는 8개의 bit(비트)로 이루어져 있습니다.
     * 컴퓨터는 2진수를 사용합니다. bit 또한 컴퓨터에서 사용하는 단위이므로 2진수(0과 1)를 사용합니다.
     * 즉, 하나의 bit에 들어가는 값은 0 아니면 1입니다.
     * 1+1을 하면 우리들의 계산으로는 2이지만, 컴퓨터의 2진법 계산으로는 10이 됩니다.
     *
     * 1byte는 총 256가지의 수를 표현할 수 있습니다.
     * 1byte(8bit)가 256가지나 수를 표현할 수 있는 것은 비트의 자릿수에 표현할 수 있는 수가 정해져 있기 때문입니다.
     * 우리가 사용하는 10진수로 변환하려면 8개의 비트 중에 어떤 위치의 값이 1이면 그 값은 64,
     * 어떠한 비트 값이 1이면 그 값은 128과 같은 방식으로 표현됩니다.
     * 예를 들어, 비트를 이용하여 십진수 15를 표현하는 방법은 다음과 같습니다.
     * 2진수로 10진수 15를 표현하면 1111입니다.
     *
     * 10진수 236을 2진수로 표현하는 방법은 다음과 같습니다.
     * 236을 2진수로 하면 11101100입니다.
     *
     * 숫자형 데이터형에는 어떠한 것이 있는지, 수를 집어넣을 때의 데이터형에 대해 알아보겠습니다.
     * 다음 표에서 저장 가능한 수는 음의 정수를 포함한 범위입니다.
     * 해당 필드에 무조건 양의 정수만 넣는다고 가정했을 때 양의 정수만 입력 가능하게 하는 방법이 있으며,
     * 이 방법을 사용하면 음의 정수 저장 공간은 필요하지 않으므로 그 수만큼 야의 정수 저장 공간이 늘어납니다.
     *
     * 숫자형 데이터형
     *
     * 실수를 사용하려면 float 또는 double을 사용해야 합니다.
     *
     * 문자형 데이터형은 어떠한 것이 있는지 알아보겠습니다.
     * 문자형 데이터는 테이블에 텍스트를 저장하기 위한 데이터형으로 주소, 이름, 이메일 등의 정보를 테이블에 저장합니다.
     *
     * */

?>

